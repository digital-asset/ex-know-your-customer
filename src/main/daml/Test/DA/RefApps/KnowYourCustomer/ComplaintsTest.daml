--
-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

{-# LANGUAGE ApplicativeDo #-}
module Test.DA.RefApps.KnowYourCustomer.ComplaintsTest where

import DA.Assert
import DA.TimeService.TimeService
import DA.Time as T
import Daml.Script

import DA.RefApps.KnowYourCustomer.DataStream
import DA.RefApps.KnowYourCustomer.DataLicense
import DA.RefApps.KnowYourCustomer.Types
import DA.RefApps.KnowYourCustomer.Publication

import Test.DA.RefApps.KnowYourCustomer.RolesTest

consumerCanStartDisputeAboutQuality : Script ()
consumerCanStartDisputeAboutQuality = script do
  (reference, currentObservation, operator, bankParty, mdvCon1Relation, now, afterExpiry, currentTimeCid, mdVendorParty, mdvStreamId, staleHours)
    <- roleSetup

  let
    lookupKey = (Publisher mdVendorParty, Consumer bankParty, reference)
    afterStale = addRelTime now (hours (staleHours + 1))
    someCIP = createCIP 211

  mdvStreamId <- submit mdVendorParty do
    exerciseCmd mdvStreamId StartDataStream with
      newObservation = currentObservation
  submit mdVendorParty do
    exerciseCmd mdvStreamId UpdateObservation with
      time = now
      newValue = someCIP

  submit operator do
    exerciseCmd currentTimeCid UpdateCurrentTime with newCurrentTime = afterStale

  Some (licenseId, license) <- queryContractKey @LiveStreamLicense bankParty lookupKey
  Some (publicationId, publication) <- queryContractKey @Publication bankParty lookupKey
  let actualDescription = "bad quality"
  disputedStreamQualityCid <- submit bankParty do
    exerciseCmd publicationId DisputeQuality with description = actualDescription
  Some disputedStreamQuality <- queryContractId bankParty disputedStreamQualityCid
  disputedStreamQuality.publication === publication
  disputedStreamQuality.description === actualDescription
