--
-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

module Test.DA.RefApps.KnowYourCustomer.Utils where

import DA.RefApps.KnowYourCustomer.Types
import DA.RefApps.KnowYourCustomer.Roles

import Daml.Script

createRelationship : Party -> ContractId OperatorRole -> Party -> Party
                  -> Script PublisherRelationship
createRelationship operator operatorRole publisher consumer = do
  let p = Publisher with party = publisher
      c = Consumer with party = consumer
  (relationRequest, roleRequest) <- operator `submit` exerciseCmd operatorRole InvitePublisherConsumer with publisher = p, consumer = c
  publisherAccept <- publisher `submit` exerciseCmd relationRequest PublisherInvitation_Accept
  publisherRole <- publisher `submit` exerciseCmd roleRequest PublisherRoleInvitation_Accept
  relationship <- consumer `submit` exerciseCmd publisherAccept ConsumerInvitation_Accept
  return $ PublisherRelationship relationship publisherRole

createDataStream : Party -> Party -> PublisherRelationship ->
                   ObservationReference -> Time -> Int -> SubscriptionFee ->
                   Script SomeDataStream
createDataStream publisher consumer (PublisherRelationship relationship pubRole) reference starting staleHours price = do
  request <- consumer `submit` exerciseCmd relationship RequestStream
    with reference, starting, staleHours
  proposal <- publisher `submit` exerciseCmd request DataStreamRequest_Propose with price
  license <- consumer `submit` exerciseCmd proposal DataLicenseProposal_Accept
  publisher `submit` exerciseCmd pubRole RegisterLicense with licenseId = license

createDataStream' : Party -> Party -> PublisherRelationship ->
                   ObservationReference -> Time -> Int -> SubscriptionFee ->
                   Script SomeDataStream
createDataStream' publisher consumer (PublisherRelationship relationship pubRole) reference starting staleHours price = do
  request <- consumer `submit` exerciseCmd relationship RequestStream
    with reference, starting, staleHours
  proposal <- publisher `submit` exerciseCmd request DataStreamRequest_Propose with price
  license <- consumer `submit` exerciseCmd proposal DataLicenseProposal_Accept
  publisher `submit` exerciseCmd pubRole RegisterLicense with licenseId = license
