--
-- Copyright (c) 2020, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

daml 1.2
module Test.DA.RefApps.KnowYourCustomer.Triggers.PublishResearchOnEmptyDataStreamTestSetup where

import DA.Time as T
import DA.TimeService.TimeService

import DA.RefApps.KnowYourCustomer.DataStream
import DA.RefApps.KnowYourCustomer.KycExtension
import DA.RefApps.KnowYourCustomer.Roles
import DA.RefApps.KnowYourCustomer.Types
import Test.DA.RefApps.KnowYourCustomer.RolesTest
import Test.DA.RefApps.KnowYourCustomer.Triggers.MergeTest
import Test.DA.RefApps.KnowYourCustomer.Triggers.MergeAndSendToReviewTestSetup
import Test.DA.RefApps.KnowYourCustomer.Utils

setup : Scenario ()
setup = scenario $ do
  setupToMergeRawPublicationsOnEmptyDataStream
  pure ()

setupToMergeRawPublicationsOnEmptyDataStream : Scenario (ContractId DataStream)
setupToMergeRawPublicationsOnEmptyDataStream = scenario $ do
    operator <- getParty "Operator"
    analyst <- getParty "KYC_Analyst"
    bank1 <- getParty "Bank1"
    reviewer <- getParty "KYC_Reviewer"
    qualityAssurance <- getParty "KYC_QA"

    operator `submit`
      create CurrentTime with
        operator
        currentTime = appStartTime
        observers = [analyst]

    researchProcess <- setupRawPublicationsAndResearchProcess
    createResearchResult researchProcess analyst reviewer qualityAssurance

    createEmptyDataStream operator analyst bank1
  where
    reference = ObservationReference with
      customerName = "ACME"
      includeCIP = True
      includeCDD = False
      includeScreening = True

    researchData = ResearchData with
      researchCip = Data $ createCIPData 1
      researchCdd = NotAvailable
      researchScreening = Data $ createScreeningData 1

    createResearchResult researchProcess analyst reviewer qualityAssurance = do
      reviewRequest <- submit analyst $ exercise researchProcess SendToReview with
          time = addRelTime appStartTime (hours 1)
          researchData = researchData
      qaRequest <- submit reviewer $ exercise reviewRequest ApproveReview
      submit qualityAssurance $ exercise qaRequest ApproveVerified

    createEmptyDataStream operator analyst bank1 = do
      operatorRole <- operator `submit` create OperatorRole with operator
      relation <- createRelationship operator operatorRole analyst bank1
      let
        starting = addRelTime appStartTime (hours 1)
        ending = addRelTime appStartTime (days 1)
        staleHours = 3
      createDataStream
        analyst bank1 relation
        reference starting ending staleHours (SubscriptionFee 10.0)
